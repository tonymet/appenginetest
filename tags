!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADMIN_USER_IDS	conf/facebook_conf.py	/^ADMIN_USER_IDS = ['875920334']$/;"	v
BaseHandler	handler/BaseHandler.py	/^class BaseHandler(webapp.RequestHandler):$/;"	c
BaseHandler	handler/TaskHandler.py	/^from handler.BaseHandler import BaseHandler$/;"	i
Borrowed	js/borrowed.js	/^Borrowed = function(){};$/;"	c
Borrowed	js/borrowed.js	/^Borrowed = function(){};$/;"	f
Borrowed.friendsList	js/borrowed.js	/^Borrowed.prototype.friendsList = function(id){$/;"	m
BorrowedForm	form/borrowedform.py	/^class BorrowedForm(djangoforms.ModelForm):$/;"	c
BorrowedForm	handler/TaskHandler.py	/^from form.borrowedform import BorrowedForm$/;"	i
BorrowedListHandler	handler/TaskHandler.py	/^class BorrowedListHandler(BaseHandler):$/;"	c
BorrowedModel	form/borrowedform.py	/^from model.TaskModel import BorrowedModel$/;"	i
BorrowedModel	model/TaskModel.py	/^class BorrowedModel(db.Model):$/;"	c
CommentHandler	handler/TaskHandler.py	/^class CommentHandler(BaseHandler):$/;"	c
CommentModel	model/TaskModel.py	/^class CommentModel(db.Model):$/;"	c
Cookie	handler/BaseHandler.py	/^import Cookie$/;"	i
DeadlineExceededError	handler/BaseHandler.py	/^from google.appengine.runtime import DeadlineExceededError$/;"	i
EXTERNAL_HREF	conf/facebook_conf.py	/^EXTERNAL_HREF = 'http:\/\/tonynet.homeip.net:8080\/'$/;"	v
FACEBOOK_APP_ID	conf/facebook_conf.py	/^FACEBOOK_APP_ID = '193293140699596'$/;"	v
FACEBOOK_APP_SECRET	conf/facebook_conf.py	/^FACEBOOK_APP_SECRET = 'cb2203dab34d01467382b58b1101f1ef'$/;"	v
FACEBOOK_CANVAS_NAME	conf/facebook_conf.py	/^FACEBOOK_CANVAS_NAME = 'tonym_test_a'$/;"	v
FACEBOOK_REALTIME_VERIFY_TOKEN	conf/facebook_conf.py	/^FACEBOOK_REALTIME_VERIFY_TOKEN = 'RANDOM TOKEN'$/;"	v
Facebook	handler/BaseHandler.py	/^from model.Facebook import Facebook$/;"	i
Facebook	model/Facebook.py	/^class Facebook(object):$/;"	c
FacebookApiError	model/Facebook.py	/^class FacebookApiError(Exception):$/;"	c
GenericHelper	helper/generichelper.py	/^class GenericHelper:$/;"	c
MainHandler	handler/TaskHandler.py	/^class MainHandler(BaseHandler):$/;"	c
Meta	form/borrowedform.py	/^  class Meta:$/;"	c	class:BorrowedForm
Meta	form/taskform.py	/^  class Meta:$/;"	c	class:TaskForm
Routes	main.py	/^from routes import Routes$/;"	i
Routes	routes.py	/^class Routes:$/;"	c
STATUS_BORROWED	model/TaskModel.py	/^	STATUS_BORROWED=0x0$/;"	v	class:BorrowedModel
STATUS_COMPLETE	model/TaskModel.py	/^	STATUS_COMPLETE=0x04$/;"	v	class:TaskModel
STATUS_IN_PROGRESS	model/TaskModel.py	/^	STATUS_IN_PROGRESS=0x01$/;"	v	class:TaskModel
STATUS_NEW	model/TaskModel.py	/^	STATUS_NEW=0x02$/;"	v	class:TaskModel
STATUS_RETURNED	model/TaskModel.py	/^	STATUS_RETURNED=0x01$/;"	v	class:BorrowedModel
TaskForm	form/taskform.py	/^class TaskForm(djangoforms.ModelForm):$/;"	c
TaskForm	handler/TaskHandler.py	/^from form.taskform import TaskForm$/;"	i
TaskHandler	handler/TaskHandler.py	/^class TaskHandler(BaseHandler):$/;"	c
TaskListHandler	handler/TaskHandler.py	/^class TaskListHandler(BaseHandler):$/;"	c
TaskModel	form/taskform.py	/^from model.TaskModel import TaskModel$/;"	i
TaskModel	model/TaskModel.py	/^class TaskModel(db.Model):$/;"	c
UserModel	handler/BaseHandler.py	/^from model.TaskModel import UserModel$/;"	i
UserModel	model/TaskModel.py	/^class UserModel(db.Model):$/;"	c
__init__	helper/generichelper.py	/^	def __init__(self, model):$/;"	m	class:GenericHelper
__init__	model/Facebook.py	/^	def __init__(self, app_id=facebook_conf.FACEBOOK_APP_ID,$/;"	m	class:Facebook
__init__	model/Facebook.py	/^	def __init__(self, result):$/;"	m	class:FacebookApiError
__init__	routes.py	/^	def __init__(self):$/;"	m	class:Routes
access_token	model/TaskModel.py	/^	access_token = db.StringProperty(required=True)$/;"	v	class:UserModel
api	model/Facebook.py	/^	def api(self, path, params=None, method=u'GET', domain=u'graph'):$/;"	m	class:Facebook
base64	model/Facebook.py	/^import base64$/;"	i
base64_url_decode	model/Facebook.py	/^	def base64_url_decode(data):$/;"	m	class:Facebook
base64_url_encode	model/Facebook.py	/^	def base64_url_encode(data):$/;"	m	class:Facebook
borrower	model/TaskModel.py	/^	borrower = db.StringProperty(required = True)$/;"	v	class:BorrowedModel
content	model/TaskModel.py	/^	content = db.StringProperty(required=True)$/;"	v	class:CommentModel
created	model/TaskModel.py	/^	created = db.DateTimeProperty(auto_now_add = True)$/;"	v	class:CommentModel
created	model/TaskModel.py	/^	created = db.DateTimeProperty(auto_now_add = True)$/;"	v	class:TaskModel
csrf_protect	handler/BaseHandler.py	/^    csrf_protect = True$/;"	v	class:BaseHandler
datetime	handler/BaseHandler.py	/^import datetime$/;"	i
datetime	model/TaskModel.py	/^import datetime$/;"	i
db	form/borrowedform.py	/^from google.appengine.ext import db$/;"	i
db	form/taskform.py	/^from google.appengine.ext import db$/;"	i
db	helper/generichelper.py	/^from google.appengine.ext import db$/;"	i
db	model/TaskModel.py	/^from google.appengine.ext import db$/;"	i
dirty	model/TaskModel.py	/^	dirty = db.BooleanProperty()$/;"	v	class:UserModel
djangoforms	form/borrowedform.py	/^from google.appengine.ext.db import djangoforms$/;"	i
djangoforms	form/taskform.py	/^from google.appengine.ext.db import djangoforms$/;"	i
due	model/TaskModel.py	/^	due = db.DateTimeProperty()$/;"	v	class:BorrowedModel
due_date	model/TaskModel.py	/^	due_date = db.DateTimeProperty()$/;"	v	class:TaskModel
email	model/TaskModel.py	/^	email = db.StringProperty()$/;"	v	class:UserModel
estimate	model/TaskModel.py	/^	estimate = db.IntegerProperty()$/;"	v	class:TaskModel
facebook	handler/BaseHandler.py	/^    facebook = None$/;"	v	class:BaseHandler
facebook_conf	handler/BaseHandler.py	/^from conf import facebook_conf$/;"	i
facebook_conf	model/Facebook.py	/^from conf import facebook_conf$/;"	i
form	helper/generichelper.py	/^	def form(self):$/;"	m	class:GenericHelper
friends	model/TaskModel.py	/^	friends = db.StringListProperty()$/;"	v	class:UserModel
get	handler/TaskHandler.py	/^	def get(self):$/;"	m	class:BorrowedListHandler
get	handler/TaskHandler.py	/^	def get(self):$/;"	m	class:MainHandler
get	handler/TaskHandler.py	/^	def get(self):$/;"	m	class:TaskListHandler
get	handler/TaskHandler.py	/^	def get(self, key):$/;"	m	class:CommentHandler
get	handler/TaskHandler.py	/^	def get(self, key):$/;"	m	class:TaskHandler
get_message	handler/BaseHandler.py	/^    def get_message(self):$/;"	m	class:BaseHandler
handle_exception	handler/BaseHandler.py	/^    def handle_exception(self, ex, debug_mode):$/;"	m	class:BaseHandler
hashlib	model/Facebook.py	/^import hashlib$/;"	i
hmac	model/Facebook.py	/^import hmac$/;"	i
init_csrf	handler/BaseHandler.py	/^    def init_csrf(self):$/;"	m	class:BaseHandler
init_facebook	handler/BaseHandler.py	/^    def init_facebook(self):$/;"	m	class:BaseHandler
initialize	handler/BaseHandler.py	/^    def initialize(self, request, response):$/;"	m	class:BaseHandler
json	handler/BaseHandler.py	/^from django.utils import simplejson as json$/;"	i
json	model/Facebook.py	/^from django.utils import simplejson as json$/;"	i
lender	model/TaskModel.py	/^	lender = db.StringProperty(required = True)$/;"	v	class:BorrowedModel
list	helper/generichelper.py	/^	def list(self):$/;"	m	class:GenericHelper
load_signed_request	model/Facebook.py	/^	def load_signed_request(self, signed_request):$/;"	m	class:Facebook
log_exception	handler/BaseHandler.py	/^    def log_exception(self, ex):$/;"	m	class:BaseHandler
logging	handler/BaseHandler.py	/^import logging$/;"	i
logging	handler/TaskHandler.py	/^import logging$/;"	i
logging	main.py	/^import logging$/;"	i
main	main.py	/^def main():$/;"	f
model	form/borrowedform.py	/^	model = BorrowedModel$/;"	v	class:BorrowedForm
model	form/taskform.py	/^	model = TaskModel$/;"	v	class:TaskForm
modified	model/TaskModel.py	/^	modified = db.DateTimeProperty(auto_now = True)$/;"	v	class:TaskModel
name	model/TaskModel.py	/^	name = db.StringProperty(required=True)$/;"	v	class:TaskModel
name	model/TaskModel.py	/^	name = db.StringProperty(required=True)$/;"	v	class:UserModel
os	handler/BaseHandler.py	/^import os$/;"	i
owner_id	model/TaskModel.py	/^	owner_id = db.StringProperty(required=True)$/;"	v	class:TaskModel
picture	model/TaskModel.py	/^	picture = db.StringProperty()$/;"	v	class:BorrowedModel
picture	model/TaskModel.py	/^	picture = db.StringProperty(required=True)$/;"	v	class:UserModel
post	handler/TaskHandler.py	/^	def post(self):$/;"	m	class:BorrowedListHandler
post	handler/TaskHandler.py	/^	def post(self):$/;"	m	class:TaskListHandler
post	handler/TaskHandler.py	/^	def post(self, key):$/;"	m	class:CommentHandler
progress	model/TaskModel.py	/^	progress = db.IntegerProperty()$/;"	v	class:TaskModel
refresh_data	model/TaskModel.py	/^	def refresh_data(self):$/;"	m	class:UserModel
render	handler/BaseHandler.py	/^    def render(self, name, **data):$/;"	m	class:BaseHandler
set_cookie	handler/BaseHandler.py	/^    def set_cookie(self, name, value, expires=None):$/;"	m	class:BaseHandler
set_message	handler/BaseHandler.py	/^    def set_message(self, **obj):$/;"	m	class:BaseHandler
status	model/TaskModel.py	/^	status = db.IntegerProperty(default = STATUS_BORROWED, choices=set([STATUS_BORROWED, STATUS_RETURNED]) )$/;"	v	class:BorrowedModel
status	model/TaskModel.py	/^	status = db.IntegerProperty(required=False, choices=set([STATUS_IN_PROGRESS, STATUS_NEW, STATUS_COMPLETE]) )$/;"	v	class:TaskModel
status_message	model/TaskModel.py	/^	def status_message(self):$/;"	m	class:BorrowedModel
status_message	model/TaskModel.py	/^	def status_message(self):$/;"	m	class:TaskModel
task	model/TaskModel.py	/^	task = db.ReferenceProperty(TaskModel, collection_name="comments")$/;"	v	class:CommentModel
taskqueue	handler/BaseHandler.py	/^from google.appengine.api.labs import taskqueue$/;"	i
template	handler/BaseHandler.py	/^from google.appengine.ext.webapp import util, template$/;"	i
template	handler/TaskHandler.py	/^from google.appengine.ext.webapp import template$/;"	i
template	helper/generichelper.py	/^from google.appengine.ext.webapp import template$/;"	i
time	model/Facebook.py	/^import time$/;"	i
title	model/TaskModel.py	/^	title = db.StringProperty(required = True)$/;"	v	class:BorrowedModel
traceback	handler/BaseHandler.py	/^import traceback$/;"	i
urlfetch	handler/BaseHandler.py	/^from google.appengine.api import urlfetch$/;"	i
urlfetch	model/Facebook.py	/^from google.appengine.api import urlfetch$/;"	i
urllib	model/Facebook.py	/^import urllib$/;"	i
user	handler/BaseHandler.py	/^    user = None$/;"	v	class:BaseHandler
user_cookie	model/Facebook.py	/^	def user_cookie(self):$/;"	m	class:Facebook
user_id	model/TaskModel.py	/^	user_id = db.StringProperty(required=True)$/;"	v	class:UserModel
users	handler/TaskHandler.py	/^		from google.appengine.api import users$/;"	i
util	handler/BaseHandler.py	/^from google.appengine.ext.webapp import util, template$/;"	i
util	main.py	/^from google.appengine.ext.webapp import util$/;"	i
uuid4	handler/BaseHandler.py	/^from uuid import uuid4$/;"	i
webapp	handler/BaseHandler.py	/^from google.appengine.ext import webapp$/;"	i
webapp	handler/TaskHandler.py	/^from google.appengine.ext import webapp$/;"	i
webapp	main.py	/^from google.appengine.ext import webapp$/;"	i
when	model/TaskModel.py	/^	when = db.DateTimeProperty()$/;"	v	class:BorrowedModel
